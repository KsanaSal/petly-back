{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0.2",
    "title": "Pet-Support API with Swagger",
    "description": "This is CRUD API application made with Express and documented with Swagger"
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": "https://pet-support.up.railway.app"
    },
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    },
    {
      "name": "Categories",
      "description": "API for categories in the system"
    },
    {
      "name": "Notices",
      "description": "API for notices in the system"
    },
    {
      "name": "News",
      "description": "API for news in the system"
    }
  ],

  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Email already exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User has been logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Current User",
            "content": {
              "application/json": {
                "s—Åhema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "tags": ["Users"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "204": {
            "description": "User has been logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": ["email", "password"],
        "properties": {
          "_id": {
            "type": "string",
            "uniqueItems": true
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User`s name",
            "example": "FirstName LastName"
          },
          "address": {
            "type": "string",
            "description": "User`s city, region",
            "example": "Kyiv, Ukraine"
          },
          "phone": {
            "type": "string",
            "description": "User`s phone",
            "example": "(123)456-78-90"
          }
        }
      },
      "Users": {
        "type": "array",
        "$ref": "#/components/schemas/User"
      },
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "example@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User`s password",
            "example": "password"
          },
          "name": {
            "type": "string",
            "description": "User`s name",
            "example": "FirstName LastName"
          },
          "address": {
            "type": "string",
            "description": "User`s city, region",
            "example": "Kyiv, Ukraine"
          },
          "phone": {
            "type": "string",
            "description": "User`s phone",
            "example": "FirstName LastName"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "example@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User`s password",
            "example": "password"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "MessageResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
